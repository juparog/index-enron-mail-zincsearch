name: 'Terraform deploy'

on:
  push:
    branches:
      - main
    paths:
      - 'infra/**'
  pull_request:
    paths:
      - 'infra/**'

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.7

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        working-directory: ./infra/src

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ./infra/src
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: ./infra/src

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: |
          terraform plan \
          -var "ZINC_FIRST_ADMIN_USER=${{ secrets.ZINC_FIRST_ADMIN_USER }}" \
          -var "ZINC_FIRST_ADMIN_PASSWORD=${{ secrets.ZINC_FIRST_ADMIN_PASSWORD }}" \
          -var "AWS_REGION=${{ vars.AWS_REGION }}" \
          -no-color \
          -input=false
        working-directory: ./infra/src
        continue-on-error: true

      - uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
            
            </details>
            
            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          terraform apply -input=false \
          -var "ZINC_FIRST_ADMIN_USER=${{ secrets.ZINC_FIRST_ADMIN_USER }}" \
          -var "ZINC_FIRST_ADMIN_PASSWORD=${{ secrets.ZINC_FIRST_ADMIN_PASSWORD }}" \
          -var "AWS_REGION=${{ vars.AWS_REGION }}" \
          -auto-approve \
          -input=false
        working-directory: ./infra/src
